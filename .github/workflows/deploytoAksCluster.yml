on: [push]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@master

    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Create ACR
      id: create-acr
      run: |
        az acr create -n gradwebserver -g gradwebserverb69e-rg --location "East US" --sku Basic --admin-enabled
        echo "::set-output name=acr_username::`az acr credential show -n gradwebserver --query username | xargs`"
        echo "::set-output name=acr_password::`az acr credential show -n gradwebserver --query passwords[0].value | xargs`"
        echo "::add-mask::`az acr credential show -n gradwebserver --query passwords[0].value | xargs`"

    - uses: azure/docker-login@v1
      with:
        login-server: gradwebserver.azurecr.io
        username: ${{ steps.create-acr.outputs.acr_username }}
        password: ${{ steps.create-acr.outputs.acr_password }}

    - name: Build and push image to ACR
      id: build-image
      run: |
        docker build "$GITHUB_WORKSPACE/." -f  "Dockerfile" -t ghcr.io/fish895623/myakscluster:${{ github.sha }} --label dockerfile-path=Dockerfile
        docker build "$GITHUB_WORKSPACE/." -f  "Dockerfile" -t ghcr.io/fish895623/myakscluster:latest --label dockerfile-path=Dockerfile
        docker push ghcr.io/fish895623/myakscluster:${{ github.sha }}
        docker push ghcr.io/fish895623/myakscluster:latest

    - uses: azure/k8s-set-context@v1
      id: login
      with:
         kubeconfig: ${{ secrets.aks_myakscluster_kubeConfig }}

    - name: Create namespace
      run: |
        namespacePresent=`kubectl get namespace | grep myakscluster93f5 | wc -l`
        if [ $namespacePresent -eq 0 ]
        then
            echo `kubectl create namespace myakscluster93f5`
        fi

    - uses: azure/k8s-create-secret@v1
      with:
        namespace: myakscluster93f5
        container-registry-url: gradwebserver.azurecr.io
        container-registry-username: ${{ steps.create-acr.outputs.acr_username }}
        container-registry-password: ${{ steps.create-acr.outputs.acr_password }}
        secret-name: myaksclusterdockerauth

    - name: k8s-deploy
      run: |
        kubectl apply -f application/app.yml